<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.mentpeak.test.mapper.TestPaperMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="testPaperResultMap" type="org.mentpeak.test.entity.TestPaper">
        <result column="id" property="id"/>
        <result column="status" property="status"/>
        <result column="create_user" property="createUser"/>
        <result column="create_time" property="createTime"/>
        <result column="update_user" property="updateUser"/>
        <result column="update_time" property="updateTime"/>
        <result column="is_deleted" property="isDeleted"/>
        <result column="tenant_code" property="tenantCode"/>
        <result column="questionnaire_id" property="questionnaireId"/>
        <result column="user_id" property="userId"/>
        <result column="task_id" property="taskId"/>
        <result column="start_time" property="startTime"/>
        <result column="finish_time" property="finishTime"/>
        <result column="question_id" property="questionId"/>
        <result column="is_finish_question" property="isFinishQuestion"/>
        <result column="is_finish" property="isFinish"/>
        <result column="is_focus" property="isFocus"/>
        <result column="remarks" property="remarks"/>
    </resultMap>


    <select id="selectTestPaperPage" resultMap="testPaperResultMap">
        select * from test_paper where is_deleted = 0
    </select>

    <select id="getInstruction" resultType="org.mentpeak.test.vo.InstructionVO">
        SELECT
            id AS moduleId,
            test_common_introductioin.introduction AS content
        FROM
            test_common_introductioin
        WHERE
            id = (
            SELECT
                introductioin_id
            FROM
                test_modules
            WHERE
                id = #{moduleId}
            )
    </select>

    <select id="getTotalPeople" resultType="java.lang.Long">
        select count(id) from t_his_user_ext where grade = #{gradeId} and is_deleted = 0
        <if test="classId != null and classId != '' or classId == 0">
            and class_id = #{classId}
        </if>
        and tenant_code = #{tenantCode}

    </select>

    <select id="getTestPeople" resultType="java.lang.Long">
        SELECT
        p.user_id
        FROM
        test_paper p
        WHERE
        p.is_finish = 1
        AND p.task_id = #{taskId}
        AND p.user_id IN (
        SELECT
        create_user
        FROM
        t_his_user_ext
        WHERE
        grade = #{gradeId}
        <if test="classId != null and classId != '' or classId == 0">
            and class_id = #{classId}
        </if>
        AND tenant_code = #{tenantCode}
        )
        group by p.user_id
    </select>

    <select id="getTestParent" resultType="java.lang.Integer">
        SELECT
            distinct (p.create_user)
        FROM
            parent_paper p
        WHERE
            p.is_finish = 1
            AND p.create_user IN (
            SELECT
                parent_id
            FROM
                parent_child
        WHERE
            child_id IN ( SELECT create_user FROM t_his_user_ext WHERE grade = #{gradeId} and class_id = #{classId} ))
            order by create_user
    </select>

    <select id="getParentPeople" resultType="java.lang.Integer">
        SELECT
            count(DISTINCT(parent_id))
        FROM
            parent_child
        WHERE
            child_id IN (
            SELECT
                    create_user
                FROM
                    t_his_user_ext
                WHERE
                    grade = #{gradeId}
                AND class_id = #{classId})
    </select>

    <select id="getClassName" resultType="java.lang.String">
        	select dict_value from platform_dict where id = #{classId}
    </select>

    <select id="getPaperIdByCId" resultType="java.lang.String">
        	SELECT
                t.id
            FROM
                (
                SELECT
                    user_id,
                    max( create_time ) AS create_time
                FROM
                    test_paper
                WHERE
                task_id = #{taskId} and
                    user_id IN (  SELECT
			ue.create_user
		FROM
			t_his_user_ext ue
		WHERE
			ue.grade = #{gradeId}
			AND ue.class_id = #{classId} AND ue.tenant_code = #{tenantCode}  )
                GROUP BY
                    user_id
                ) a
                INNER JOIN test_paper t ON a.user_id = t.user_id
                AND a.create_time = t.create_time
    </select>

    <select id="getAllClassPaperId" resultType="java.lang.String">
        	SELECT
                t.id
            FROM
                (
                SELECT
                    user_id,
                    max( create_time ) AS create_time
                FROM
                    test_paper
                WHERE
                    user_id IN (  SELECT
			ue.create_user
		FROM
			t_his_user_ext ue
			LEFT JOIN test_task_user tu ON ue.create_user = tu.user_id AND tu.tenant_code = #{tenantCode}
		WHERE
			ue.grade = #{gradeId}
			AND ue.class_id = #{classId}
			AND tu.test_task_id = #{taskId}
			AND tu.is_valid = 1 AND ue.tenant_code = #{tenantCode})
                GROUP BY
                    user_id
                ) a
                INNER JOIN test_paper t ON a.user_id = t.user_id
                AND a.create_time = t.create_time
    </select>

    <select id="getAllGradePaperId" resultType="java.lang.String">
        	SELECT
                t.id
            FROM
                (
                SELECT
                    user_id,
                    max( create_time ) AS create_time
                FROM
                    test_paper
                WHERE
                    user_id IN (  SELECT
			ue.create_user
		FROM
			t_his_user_ext ue
			LEFT JOIN test_task_user tu ON ue.create_user = tu.user_id AND tu.tenant_code =#{tenantCode}
		WHERE
			ue.grade = #{gradeId}
			AND tu.test_task_id = #{taskId}
			AND tu.is_valid = 1 AND ue.tenant_code = #{tenantCode} )
                GROUP BY
                    user_id
                ) a
                INNER JOIN test_paper t ON a.user_id = t.user_id
                AND a.create_time = t.create_time
    </select>

    <select id="getAllClassId" resultType="java.lang.Long">
        SELECT
            class_id
        FROM
            grade_class
        WHERE
            grade_id = (
            SELECT
                grade_id
            FROM
                grade_class
        WHERE
            class_id = #{classId})
    </select>

    <select id="getClassByGradeId" resultType="java.lang.Long">
        SELECT
            class_id
        FROM
            grade_class
        WHERE
            grade_id = #{gradeId}
    </select>

</mapper>
